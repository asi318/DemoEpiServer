@using EPiServer.Editor
@using EPiServer.Core
@using EPiServer.Web
@model IPageViewModel<SitePageData>
<div>
    <div id="header" class="container-fluid">
        <div class="row">
            <div class="row">
                <a href="@Model.Layout.LogotypeLinkUrl" title="@Model.Layout.Logotype.Title">
                    @Html.PropertyFor(x => x.Layout.Logotype)
                </a>
            </div>
            <div class="row">

                <div class="alloyMenu">
                    <div class="navbar">
                        <div class="navbar-inner">

                            <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </a>
                            <div class="nav-collapse">
                                <ul class="nav col-md-8">
                                    <li class="@(Model.CurrentPage.ContentLink.CompareToIgnoreWorkID(SiteDefinition.Current.StartPage) ? "active" : null)  col-md-2">@Html.ContentLink(SiteDefinition.Current.StartPage)</li>
                                    @Html.MenuList(SiteDefinition.Current.StartPage,
                                    @<li class="col-md-2 @(item.Selected ? "active" : null)">
                                        @Html.PageLink(item.Page, null, new { @class = string.Join(" ", item.Page.GetThemeCssClassNames()) })
                                    </li>)
                                </ul>
                                <div class="navbar-search col-md-2">
                                    @*We use GET to submit the form to enable bookmarking etc of search results.  However, as GET will remove other
                                        query string values not in the form we can't use that in edit mode.*@

                                    @{
                                        using (Html.BeginForm(null, null, PageEditing.PageIsInEditMode ? FormMethod.Post : FormMethod.Get, new { @action = Model.Layout.SearchActionUrl }))
                                        {
                                            <input type="text" class="search-query" name="q" id="SearchKeywords" placeholder="@Html.Translate("/mainnavigation/search")" />
                                                <input type="submit" class="searchButton" id="SearchButton" value="" />
                                        }
                                    }
                                </div>
                                <div class="lang-selector dropdown col-md-2">
                                    @{
                                        var activeLanguages = EPiServer.ServiceLocation.ServiceLocator.Current.GetInstance<EPiServer.DataAbstraction.ILanguageBranchRepository>().ListEnabled();
                                        var preferredLang = EPiServer.Globalization.ContentLanguage.PreferredCulture.Name;
                                        var langSelectListItem = new List<SelectListItem>();
                                        foreach (var lang in activeLanguages)
                                        {
                                            SelectListItem selectItem = new SelectListItem();
                                            selectItem.Text = lang.Name;
                                            selectItem.Value = Url.PageLinkUrl(Model.CurrentPage.ContentLink).ToString().Replace(Model.CurrentPage.Language.ToString(), lang.LanguageID);

                                            if (string.Equals(preferredLang, lang.LanguageID, StringComparison.InvariantCultureIgnoreCase))
                                            {
                                                selectItem.Selected = true;
                                            }

                                            langSelectListItem.Add(selectItem);
                                        }
                                    }
                                    @Html.DropDownList(preferredLang, langSelectListItem, new { @onchange = "location = this.value;" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

            </div>


        </div>

    </div>
</div>

<hr />
